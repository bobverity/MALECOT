// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// runMCMC_biallelic_cpp
Rcpp::List runMCMC_biallelic_cpp(Rcpp::List args_data, Rcpp::List args_model, Rcpp::List args_functions);
RcppExport SEXP _MALECOT_runMCMC_biallelic_cpp(SEXP args_dataSEXP, SEXP args_modelSEXP, SEXP args_functionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args_data(args_dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_model(args_modelSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_functions(args_functionsSEXP);
    rcpp_result_gen = Rcpp::wrap(runMCMC_biallelic_cpp(args_data, args_model, args_functions));
    return rcpp_result_gen;
END_RCPP
}
// runMCMC_multiallelic_cpp
Rcpp::List runMCMC_multiallelic_cpp(Rcpp::List args_data, Rcpp::List args_model, Rcpp::List args_functions);
RcppExport SEXP _MALECOT_runMCMC_multiallelic_cpp(SEXP args_dataSEXP, SEXP args_modelSEXP, SEXP args_functionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args_data(args_dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_model(args_modelSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_functions(args_functionsSEXP);
    rcpp_result_gen = Rcpp::wrap(runMCMC_multiallelic_cpp(args_data, args_model, args_functions));
    return rcpp_result_gen;
END_RCPP
}
// continueMCMC_cpp
Rcpp::List continueMCMC_cpp(Rcpp::List args_params);
RcppExport SEXP _MALECOT_continueMCMC_cpp(SEXP args_paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args_params(args_paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(continueMCMC_cpp(args_params));
    return rcpp_result_gen;
END_RCPP
}
// foobar_linear
Rcpp::NumericVector foobar_linear(Rcpp::NumericVector x);
RcppExport SEXP _MALECOT_foobar_linear(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(foobar_linear(x));
    return rcpp_result_gen;
END_RCPP
}
// fixLabels_cpp
Rcpp::List fixLabels_cpp(Rcpp::List args_model);
RcppExport SEXP _MALECOT_fixLabels_cpp(SEXP args_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args_model(args_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(fixLabels_cpp(args_model));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MALECOT_runMCMC_biallelic_cpp", (DL_FUNC) &_MALECOT_runMCMC_biallelic_cpp, 3},
    {"_MALECOT_runMCMC_multiallelic_cpp", (DL_FUNC) &_MALECOT_runMCMC_multiallelic_cpp, 3},
    {"_MALECOT_continueMCMC_cpp", (DL_FUNC) &_MALECOT_continueMCMC_cpp, 1},
    {"_MALECOT_foobar_linear", (DL_FUNC) &_MALECOT_foobar_linear, 1},
    {"_MALECOT_fixLabels_cpp", (DL_FUNC) &_MALECOT_fixLabels_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_MALECOT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
